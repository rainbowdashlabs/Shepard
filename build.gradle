import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter
import java.time.temporal.ChronoUnit

plugins {
    id "com.github.ben-manes.versions" version "0.27.0"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id 'com.palantir.git-version' version "0.12.2"
    id 'java'
    id 'maven-publish'
    id 'application'
    id 'idea'
    id "io.freefair.lombok" version "5.1.0"
}

sourceCompatibility = 11
targetCompatibility = 11
compileJava.options.encoding = 'UTF-8'

group = 'ShepardBot'
version = '2.0.5'
mainClassName="de.eldoria.shepard.ShepardBot"

// set up generation of ressources
def generatedResources = "$buildDir/generated-resources/main"
sourceSets.main.output.dir generatedResources, builtBy: "generateResources"

task generateResources() {
    dependsOn "generateBuildInfo"
}

task generateBuildInfo() {
    doLast() {
        def det = versionDetails()
        new File(generatedResources).mkdirs()
        def f = new File(generatedResources, "vcs.properties")
        f.createNewFile()
        f.text = """
version: ${project.version}
commit: ${det.gitHashFull}
branch: ${det.branchName}
clean: ${det.isCleanTag}
buildTime: ${DateTimeFormatter.ISO_ZONED_DATE_TIME.format(ZonedDateTime.now().truncatedTo(ChronoUnit.SECONDS))}
"""
    }
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()

    maven {
        url = uri('https://jitpack.io')
    }
}


dependencies {
    // logging
    def slf4j = "1.7.30"
    def log4j2 = "2.13.0"
    implementation "org.slf4j:slf4j-api:$slf4j"
    implementation "org.apache.logging.log4j:log4j-core:$log4j2"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2"
    implementation 'com.djdch.log4j:log4j-staticshutdown:1.1.0'

    // commons stuff you don't know you actually want until you realise it's missing
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "com.google.guava:guava:28.2-jre"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:2.7.1"
    implementation "com.squareup.retrofit2:converter-gson:2.7.1"

    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.3.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    implementation 'com.sparkjava:spark-core:2.8.0'
    implementation 'postgresql:postgresql:9.1-901-1.jdbc4'
    implementation ('net.dv8tion:JDA:4.1.1_165') {
        exclude module: 'opus-java'
        transitive(true)
    }


    //core
    implementation 'club.minnced:discord-webhooks:0.2.0'
    implementation 'org.yaml:snakeyaml:1.21'

    //database
    implementation 'org.postgresql:postgresql:42.2.6.jre7'
    //features
    implementation 'info.debatty:java-string-similarity:1.2.1'

    //web api wrapper
    implementation 'org.discordbots:DBL-Java-Library:2.0.1'
    implementation 'com.google.api-client:google-api-client:1.23.0'

    //testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}